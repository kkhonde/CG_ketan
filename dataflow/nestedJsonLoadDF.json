{
	"name": "nestedJsonLoadDF",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Json1",
						"type": "DatasetReference"
					},
					"name": "nestedJSON"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "flatten1"
				},
				{
					"name": "select1"
				},
				{
					"name": "AZ900"
				}
			],
			"scriptLines": [
				"source(output(",
				"          customerid as integer,",
				"          customername as string,",
				"          registered as boolean,",
				"          courses as string[]",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'arrayOfDocuments') ~> nestedJSON",
				"nestedJSON foldDown(unroll(courses, courses),",
				"     mapColumn(",
				"          CustomerId = customerid,",
				"          customername,",
				"          registered,",
				"          courses",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"flatten1 select(mapColumn(",
				"          CustomerId,",
				"          Customername = customername,",
				"          IsRegistered = registered,",
				"          CourseName = courses",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 split(CourseName == 'AZ-900',",
				"     CourseName == 'AZ-500',",
				"     CourseName == 'AZ-200',",
				"     CourseName == 'AZ-303',",
				"     disjoint: true) ~> AZ900@(AZ900, AZ500, AZ200, AZ303)"
			]
		}
	}
}